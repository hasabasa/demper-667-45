
import { useEffect, useState } from 'react';
import { useMobileOptimizedSimple as useMobileOptimized } from "@/hooks/useMobileOptimizedSimple";
import { cn } from "@/lib/utils";

export default function WhatsAppAutoConnect() {
  const mobile = useMobileOptimized();
  
  const [status, setStatus] = useState('‚è≥ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WhatsApp...');
  const [qrCode, setQrCode] = useState<string | null>(null);
  const [hasErrored, setHasErrored] = useState(false);

  const pollConnection = async () => {
    try {
      const res = await fetch('/qr');
      
      if (!res.ok) {
        throw new Error(`HTTP ${res.status}`);
      }
      
      const data = await res.json();

      if (data.qr) {
        setQrCode(data.qr);
        setStatus('üì≤ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ WhatsApp');
      } else if (data.status === 'connected') {
        setQrCode(null);
        setStatus('‚úÖ –í–∞—à –Ω–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–µ');
      } else {
        setStatus('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞...');
      }
    } catch (err) {
      if (!hasErrored) {
        console.log('WhatsApp: –ë—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ-—Ä–µ–∂–∏–º');
        setHasErrored(true);
      }
      setStatus('üöß –î–µ–º–æ-—Ä–µ–∂–∏–º WhatsApp –±–æ—Ç–∞');
      setQrCode(null);
    }
  };

  useEffect(() => {
    pollConnection();
    // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–ø—Ä–æ—Å
    if (!hasErrored) {
      const interval = setInterval(() => {
        if (!hasErrored) {
          pollConnection();
        }
      }, 5000);
      return () => clearInterval(interval);
    }
  }, [hasErrored]);

  return (
    <div className={cn(
      "flex flex-col items-center justify-center space-y-6",
      mobile.isMobile ? "min-h-[400px]" : "min-h-[500px]"
    )}>
      <div className="text-center">
        <h1 className={cn(
          "font-bold mb-2",
          mobile.isMobile ? mobile.getTextSize('xl') : "text-3xl"
        )}>
          WhatsApp –±–æ—Ç
        </h1>
        <p className={cn(
          "text-muted-foreground mb-8",
          mobile.getTextSize('sm')
        )}>
          –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞–º
        </p>
      </div>
      
      <div className={cn(
        "bg-card rounded-lg shadow-lg text-center w-full",
        mobile.isSmallPhone ? "p-4 max-w-sm" : "p-8 max-w-md"
      )}>
        <div className={cn(
          "mb-4",
          mobile.getTextSize('base')
        )}>
          {status}
        </div>
        
        {qrCode && (
          <div className="mt-6">
            <img
              src={qrCode}
              alt="QR-–∫–æ–¥ WhatsApp"
              className="mx-auto border rounded-lg"
              style={{ 
                width: mobile.isSmallPhone ? '200px' : '250px', 
                height: mobile.isSmallPhone ? '200px' : '250px' 
              }}
            />
            <p className={cn(
              "text-muted-foreground mt-2",
              mobile.getTextSize('xs')
            )}>
              –û—Ç–∫—Ä–æ–π—Ç–µ WhatsApp –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –°–≤—è–∑–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ‚Üí –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥
            </p>
          </div>
        )}
        
        {status.includes('–î–µ–º–æ-—Ä–µ–∂–∏–º') && (
          <div className="mt-6 p-4 bg-primary/5 rounded-lg border border-primary/20">
            <h3 className="font-semibold text-primary mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ WhatsApp –±–æ—Ç–∞:</h3>
            <ul className="text-sm text-primary/80 text-left space-y-1">
              <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö</li>
              <li>‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–æ–≤</li>
              <li>‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞</li>
              <li>‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</li>
            </ul>
          </div>
        )}
      </div>
    </div>
  );
}
